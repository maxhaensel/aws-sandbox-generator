schema {
  query: Query
  mutation: Mutation
}

enum Cloud {
  AWS
  AZURE
  GCP
}

type Sandbox {
  account_id: String!
  account_name: String!
  available: String
  assigned_until: String
  assigned_since: String
  assigned_to: String
}

interface CloudSandbox {
  id: ID!
  assignedUntil: String!
  assignedSince: String!
  assignedTo: String!
}

type AwsSandbox implements CloudSandbox {
  id: ID!
  assignedUntil: String!
  assignedSince: String!
  assignedTo: String!
  accountName: String!
}

type AzureSandbox implements CloudSandbox {
  id: ID!
  assignedUntil: String!
  assignedSince: String!
  assignedTo: String!
  sandboxName: String!
}

type CreateNewSandboxResponse {
  sandbox: Sandbox!
}

union LeaseSandBoxResult = AzureSandbox | AwsSandbox

type ListLeaseSandBoxResult {
  cloudSandboxes: [LeaseSandBoxResult]
}

type Query {
}

# todo Delete
type LeaseASandBoxResponse {
  message: String!
  sandbox: Sandbox!
}

type Mutation {
  deallocateSandbox(Account_id: String!): LeaseASandBoxResponse
  leaseSandBox(
    email: String!
    leaseTime: String!
    cloud: Cloud!
  ): LeaseSandBoxResult!
  createNewSandbox(
    account_id: String!
    account_name: String!
  ): CreateNewSandboxResponse!
}
